apiVersion: apps/v1
kind: Deployment
metadata:
  name: camera-frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: camera-frontend
  template:
    metadata:
      labels:
        app: camera-frontend
    spec:
      containers:
      - name: camera-frontend
        image: 192.168.10.153:32000/camera-frontend:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: camera-frontend-service
spec:
  selector:
    app: camera-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timelaps-frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: timelaps-frontend
  template:
    metadata:
      labels:
        app: timelaps-frontend
    spec:
      containers:
      - name: timelaps-frontend
        image: 192.168.10.153:32000/timelaps-frontend:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: timelaps-frontend-service
spec:
  selector:
    app: timelaps-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: timelaps-service-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi # Adjust size as needed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timelaps-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: timelaps-service
  template:
    metadata:
      labels:
        app: timelaps-service
    spec:
      containers:
      - name: timelaps-service
        image: 192.168.10.153:32000/timelaps-service:latest
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: timelaps-service-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: timelaps-service-svc
spec:
  selector:
    app: timelaps-service
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2 # To correctly pass subpaths
    # If your Ingress controller is not Nginx, you might need different annotations
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /camera(/|$)(.*)
        pathType: ImplementationSpecific # Changed from Prefix
        backend:
          service:
            name: camera-frontend-service
            port:
              number: 80
      - path: /timelaps(/|$)(.*)
        pathType: ImplementationSpecific # Changed from Prefix
        backend:
          service:
            name: timelaps-frontend-service
            port:
              number: 80
      - path: /api(/|$)(.*)
        pathType: ImplementationSpecific # Changed from Prefix
        backend:
          service:
            name: timelaps-service-svc
            port:
              number: 3000
